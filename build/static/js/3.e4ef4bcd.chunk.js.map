{"version":3,"sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.js","pages/Specific.js"],"names":["module","exports","MovieDetails","props","imgBaseUrl","className","classes","InnerContainer","Heading","details","title","release_date","TagLine","tagline","Details","ImageContainer","src","image","alt","style","filter","loading","InnerDetails","Genres","genres","map","e","i","name","length","smallDetails","status","Math","ceil","rating","MovieText","text","Credits","movieCastDetail","cast","id","profile_path","original_name","TrailerBtn","href","VideoId","target","rel","Similar","HeadingSimilar","type","MovieList","SimilarResults","movies","similar","Specific","console","log","useState","fetchedDetailData","setFetchedDetailData","movieCast","setMovieCast","youtubeVideo","setYoutubeVideo","setSimilar","setLoading","params","useParams","useEffect","fetchDetail","a","fetch","movieId","res","json","data","original_title","poster_path","last_air_date","vote_average","overview","fetchMovieCast","fetchTrailerId","results","fetchSimilar","document","getElementById","scrollIntoView","behavior","Fragment","key","React","memo"],"mappings":"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","file":"static/js/3.e4ef4bcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieDetails\":\"MovieDetails_MovieDetails__2yOme\",\"InnerContainer\":\"MovieDetails_InnerContainer__2yy4X\",\"Heading\":\"MovieDetails_Heading__mIeP7\",\"TagLine\":\"MovieDetails_TagLine__2W0-T\",\"Details\":\"MovieDetails_Details__naP4I\",\"ImageContainer\":\"MovieDetails_ImageContainer__3Q4PJ\",\"InnerDetails\":\"MovieDetails_InnerDetails__Jnk74\",\"TrailerBtn\":\"MovieDetails_TrailerBtn__3FDt-\",\"Genres\":\"MovieDetails_Genres__5pAxO\",\"smallDetails\":\"MovieDetails_smallDetails__29Y28\",\"MovieText\":\"MovieDetails_MovieText__1jXDq\",\"Credits\":\"MovieDetails_Credits__2p1O5\",\"Similar\":\"MovieDetails_Similar__3SiW0\",\"HeadingSimilar\":\"MovieDetails_HeadingSimilar__E9Lc6\",\"SimilarResults\":\"MovieDetails_SimilarResults__l23Az\"};","import React, { useEffect } from 'react';\nimport MovieList from '../MovieList/MovieList';\nimport classes from './MovieDetails.module.css';\n\n\n\nfunction MovieDetails(props) {\n\n\n    const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n    const noImage = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS2O_mIRhxseMzEZB_rvzjC92FQmBsVxY3wIrFnGM-Oh6azjRI_InZDtPmihRINHJGVVO4&usqp=CAU';\n    const movieNoImg = 'https://www.movienewsletters.net/photos/000000h1.jpg';\n\n    return (\n        <div className={classes.MovieDetails}>\n            <div className={classes.InnerContainer}>\n\n                <h1 className={classes.Heading}>{props.details.title} ({props.details.release_date})</h1>\n                <p className={classes.TagLine}>{props.details.tagline}</p>\n\n                <div className={classes.Details}>\n                    <span className={classes.ImageContainer}>\n                        <img src={props.details.image ? `${imgBaseUrl}/${props.details.image}` : movieNoImg} alt=\"movieImg\" style={{ filter: props.loading ? 'blur(3px)' : 'blur(0)' }} />\n                    </span>\n                    <div className={classes.InnerDetails}>\n                        <span className={classes.Genres}>\n                            <h3>Genres :</h3> <h3>{props.details.genres && props.details.genres.map((e, i) => `${e.name} ${i < props.details.genres.length - 1 ? ',' : ''} `)}</h3>\n                        </span>\n\n                        <span className={classes.smallDetails}>\n                            <p>Status : {props.details.status}</p>\n                            <p>Release Date : {props.details.release_date}</p>\n                            <p>Rating : {Math.ceil(props.details.rating)}</p>\n                            <p>TagLink : {props.details.tagline}</p>\n                        </span>\n                        <span className={classes.MovieText}>\n                            <p><b>description :</b> {props.text}</p>\n                        </span>\n\n                        <div className={classes.Credits}>\n                            {props.movieCastDetail &&\n                                props.movieCastDetail.map((cast,i) => {\n                                    return <span id={i} key={cast.id}>\n                                        <img src={cast.profile_path ? `${imgBaseUrl}${cast.profile_path}` : noImage} alt=\"action img\" style={{ filter: props.loading ? 'blur(3px)' : 'blur(0)' }} />\n                                        <p>{cast.name || cast.original_name}</p>\n                                    </span>\n                                })\n                            }\n                        </div>\n\n                        <button className={classes.TrailerBtn}>\n                            <a href={`https://www.youtube.com/watch?v=${props.VideoId}`} target=\"_blank\" rel=\"noreferrer\" >Watch Trailer</a>\n                        </button>\n\n                    </div>\n                </div>\n\n                <div className={classes.Similar}>\n                    <h1 className={`${classes.Heading} ${classes.HeadingSimilar}`}>Similar {props.type === 'tv' ? 'Tv Series' : 'Movies'}</h1>\n                    <MovieList className={classes.SimilarResults} movies={props.similar} type={props.type === 'tv' ? 'Tv Series' : 'Movie'} />\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default MovieDetails;\n\n\n\n\n\n\n\n// youtubeVideoKey = AIzaSyBJEVSxM3MnHbR0EgDw27M-mjd4II-FYt4\n// endpoint const response = await fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${search}&key=${process.env.REACT_APP_VIDEO_API_KEY}`);\n\n\n///////credit = https://api.themoviedb.org/3/movie/550988/credits?api_key=847ab230a96a2f52bc3f647f23dc84a4&language=en-US","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport MovieDetails from '../components/MovieDetails/MovieDetails';\n\n\nfunction Specific() {\n\n    console.log('[specific.js]');\n\n    const [fetchedDetailData, setFetchedDetailData] = useState();\n    const [movieCast, setMovieCast] = useState();\n    const [youtubeVideo, setYoutubeVideo] = useState();\n    const [similar, setSimilar] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const params = useParams();\n\n    useEffect(() => {\n\n        const fetchDetail = async () => {\n            if(fetchedDetailData) {\n                setFetchedDetailData({image: 'https://www.movienewsletters.net/photos/000000h1.jpg'})\n            }\n\n            setLoading(true);\n            const res = await fetch(`https://api.themoviedb.org/3/${params.type}/${params.movieId}?api_key=847ab230a96a2f52bc3f647f23dc84a4&language=en-US`)\n            const data = await res.json();\n            // console.log(data);\n            setFetchedDetailData({\n                title: data.title || data.original_title || data.name,\n                genres: data.genres,\n                image: data.poster_path,\n                release_date: data.release_date || data.last_air_date,\n                status: data.status,\n                tagline: data.tagline,\n                rating: data.vote_average,\n                text: data.overview\n            });\n            setLoading(false);\n        }\n\n        const fetchMovieCast = async () => {\n            setMovieCast(false);\n            const res = await fetch(`https://api.themoviedb.org/3/${params.type}/${params.movieId}/credits?api_key=847ab230a96a2f52bc3f647f23dc84a4&language=en-US`);\n            const data = await res.json();\n            setMovieCast(data.cast);\n        }\n\n\n        const fetchTrailerId = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/${params.type}/${params.movieId}/videos?api_key=847ab230a96a2f52bc3f647f23dc84a4&language=en-US`);\n            const data = await res.json();\n            setYoutubeVideo(data.results[data.results.length - 1]);\n        }\n\n        const fetchSimilar = async () => {\n            // setSimilar(false);\n            const res = await fetch(`https://api.themoviedb.org/3/${params.type}/${params.movieId}/similar?api_key=847ab230a96a2f52bc3f647f23dc84a4&language=en-US`);\n            const data = await res.json();\n            setSimilar(data.results);\n        }\n\n        fetchDetail();\n        fetchMovieCast();\n        fetchTrailerId();\n        fetchSimilar();\n        \n        document.getElementById('App') && document.getElementById('Nav').scrollIntoView({ behavior: 'smooth' });\n\n    }, [params.movieId, params.type]);\n\n\n    // useEffect(() => {\n    //     const fetchVideoId = async (search) => {\n    //         const response = await fetch(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${search}&key=${process.env.REACT_APP_VIDEO_API_KEY}`);\n    //         const data = await response.json();\n    //         setVideoId(data.items[0].id.videoId);\n    //     }\n    // }, []);\n\n\n    return (\n        <React.Fragment>\n            {fetchedDetailData &&\n                <MovieDetails\n                    text={fetchedDetailData.text}\n                    // text=\"dummy text\"\n                    movieCastDetail={movieCast}\n                    details={fetchedDetailData}\n                    VideoId={youtubeVideo && youtubeVideo.key}\n                    type={params.type}\n                    similar={similar}\n                    loading={loading}\n                />}\n\n        </React.Fragment>\n    )\n}\n\nexport default React.memo(Specific);\n\n\n// Trailer Endpoint : https://api.themoviedb.org/3/movie/550988/videos?api_key=847ab230a96a2f52bc3f647f23dc84a4&language=en-US"],"sourceRoot":""}